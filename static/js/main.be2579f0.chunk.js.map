{"version":3,"sources":["containers/AppContainer/constants.js","containers/AppContainer/reducers.js","utils/IndexReducer.js","containers/AppContainer/actions.js","utils/service/albumService.js","containers/AppContainer/sagas.js","utils/IndexSagas.js","components/App/eachAlbum.js","components/App/index.js","containers/AppContainer/index.js","containers/LayoutContainer/index.js","components/NoMatch/index.js","serviceWorker.js","index.js"],"names":["GET_ALBUM","GET_ALBUM_SUCCESS","GET_ALBUM_DETAILS_SUCCESS","initialState","fromJS","albums","albumDetails","AppReducer","state","arguments","length","undefined","action","type","set","IndexReducer","combineReducers","getAlbumSuccess","getAlbumDetailsSuccess","fetchAlbums","axios","get","headers","Access-Control-Allow-Origin","crossdomain","then","response","data","catch","err","fetchAlbumsDetails","id","concat","getAlbum","getAlbumSaga","newAlbumCall","newAlbum","albumsDetails","regenerator_default","a","wrap","_context","prev","next","call","sent","put","forEach","e","push","all","i","t0","stop","_marked","this","_context2","takeLatest","_marked2","sagas","IndexSaga","Object","toConsumableArray","AppSagas","map","saga","IndexSagas_marked","EachAlbum","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","getEndIndex","width","window","innerWidth","updateWindowSize","setState","endIndex","prevPage","_this$state","startIndex","nextPage","_this$state2","renderPrev","react_default","createElement","href","className","onClick","renderNext","addEventListener","_this$state3","_this$props","albumDetail","album","react","slice","key","albumId","src","thumbnailUrl","height","title","Component","App","Card","CardBody","Row","eachAlbum","connect","getIn","toJS","dispatch","LayoutContainer","Container","fluid","React","Children","toArray","children","NoMatch","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","error","history","createBrowserHistory","routerMiddleware","router","sagaMiddleware","createSagaMiddleware","composeSetup","compose","store","createStore","connectRouter","applyMiddleware","run","IndexSagas","ReactDOM","render","src_containers_LayoutContainer","es","immutable","Switch","Route","path","component","document","getElementById","URL","process","origin","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.be2579f0.chunk.js","sourcesContent":["export const GET_ALBUM = 'GET_ALBUM'\nexport const GET_ALBUM_SUCCESS = 'GET_ALBUM_SUCCESS'\nexport const GET_ALBUM_DETAILS_SUCCESS = 'GET_ALBUM_DETAILS_SUCCESS'\n","import { fromJS } from 'immutable'\nimport { GET_ALBUM_SUCCESS, GET_ALBUM_DETAILS_SUCCESS } from './constants'\nconst initialState = fromJS({\n\talbums: [],\n\talbumDetails: {}\n})\n\n/* eslint-disable no-fallthrough */\nfunction AppReducer(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase GET_ALBUM_SUCCESS:\n\t\t\treturn state\n\t\t\t\t.set('albums', fromJS(action.albums))\n\t\tcase GET_ALBUM_DETAILS_SUCCESS:\n\t\t\treturn state\n\t\t\t\t.set('albumDetails', fromJS(action.albumDetails))\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n/* eslint-enable no-fallthrough */\n\nexport default AppReducer\n","import { combineReducers } from 'redux-immutable'\nimport AppReducer from '../containers/AppContainer/reducers'\n\nconst IndexReducer = combineReducers({\n\tAppReducer\n})\n\nexport default IndexReducer\n","import {\n\tGET_ALBUM,\n\tGET_ALBUM_SUCCESS,\n\tGET_ALBUM_DETAILS_SUCCESS\n} from './constants'\n\nexport const getAlbumSuccess = albums => ({\n\ttype: GET_ALBUM_SUCCESS,\n\talbums\n})\n\nexport const getAlbum = () => ({\n\ttype: GET_ALBUM\n})\n\nexport const getAlbumDetailsSuccess = albumDetails => ({\n\ttype: GET_ALBUM_DETAILS_SUCCESS,\n\talbumDetails\n})\n","import axios from 'axios'\n\nexport function fetchAlbums() {\n\treturn axios.get(\n\t\t`https://jsonplaceholder.typicode.com/albums`,\n\t\t{\n\t\t\theaders: { 'Access-Control-Allow-Origin': '*' },\n\t\t\tcrossdomain: true\n\t\t}\n\t)\n\t\t.then(response => response.data)\n\t\t.catch(err => {\n\t\t\tthrow err\n\t\t})\n}\n\nexport function fetchAlbumsDetails(id) {\n\treturn axios.get(\n\t\t`https://jsonplaceholder.typicode.com/photos?albumId=${id}`,\n\t\t{\n\t\t\theaders: { 'Access-Control-Allow-Origin': '*' },\n\t\t\tcrossdomain: true\n\t\t}\n\t)\n\t\t.then(response => response.data)\n\t\t.catch(err => {\n\t\t\tthrow err\n\t\t})\n}\n","import { takeLatest, call, put, all } from 'redux-saga/effects'\n\nimport { getAlbumSuccess, getAlbumDetailsSuccess } from './actions'\n\nimport { GET_ALBUM } from './constants'\n\nimport { fetchAlbums, fetchAlbumsDetails } from '../../utils/service/albumService'\n\nfunction* getAlbum() {\n\ttry {\n\t\tconst albums = yield call(fetchAlbums)\n\t\tyield put(getAlbumSuccess(albums))\n\t\tconst newAlbumCall = []\n\t\tconst newAlbum = {}\n\t\talbums.forEach(e => {\n\t\t\tnewAlbumCall.push(call(fetchAlbumsDetails, e.id))\n\t\t})\n\t\tconst albumsDetails = yield all(newAlbumCall)\n\t\talbums.forEach((e, i) => {\n\t\t\tnewAlbum[e.id] = albumsDetails[i]\n\t\t})\n\t\tyield put(getAlbumDetailsSuccess(newAlbum))\n\t} catch (error) {\n\t\t// todo\n\t}\n}\n\nfunction* getAlbumSaga() {\n\tyield takeLatest(GET_ALBUM, getAlbum)\n}\n\nexport default [getAlbumSaga]\n","import { all } from 'redux-saga/effects'\nimport AppSagas from '../containers/AppContainer/sagas'\n\nexport default function* IndexSaga() {\n\tyield all([\n\t\t...AppSagas.map(saga => saga()),\n\t])\n}\n","import React, { Component, Fragment } from 'react';\nimport './index.scss';\n\nclass EachAlbum extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tstartIndex: 0,\n\t\t\tendIndex: this.getEndIndex()\n\t\t}\n\t\twindow.addEventListener('resize', this.updateWindowSize)\n\t}\n\n\tgetEndIndex = () => {\n\t\tconst width = window.innerWidth\n\t\tif(width > 1212) {\n\t\t\treturn 6\n\t\t} else if(width > 826) {\n\t\t\treturn 4\n\t\t} else if(width > 687) {\n\t\t\treturn 3\n\t\t} else if(width > 555) {\n\t\t\treturn 2\n\t\t}\n\t\treturn 1\n\t}\n\n\tupdateWindowSize = () => {\n\t\tthis.setState({\n\t\t\tendIndex: this.getEndIndex()\n\t\t})\n\t}\n\n\tprevPage = () => {\n\t\tconst { startIndex, endIndex } = this.state\n\t\tthis.setState({\n\t\t\tstartIndex: startIndex - 4,\n\t\t\tendIndex: endIndex - 4\n\t\t})\n\t}\n\n\tnextPage = () => {\n\t\tconst { endIndex, startIndex } = this.state\n\t\tthis.setState({\n\t\t\tendIndex: endIndex + 4,\n\t\t\tstartIndex: startIndex + 4\n\t\t})\n\t}\n\n\trenderPrev = () => <a href=\"javascript:void(0)\" className=\"previous round\" onClick={this.prevPage}>&#8249;</a>\n\n\trenderNext = () => <a href=\"javascript:void(0)\" className=\"next round\" onClick={this.nextPage}>&#8250;</a>\n\n\trender() {\n\t\tconst { startIndex, endIndex } = this.state\n\t\tconst { album, albumDetail } = this.props\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t{startIndex > 0 ? this.renderPrev() : null}\n\t\t\t\t{albumDetail.slice(startIndex, endIndex).map(a => (\n\t\t\t\t\t<div key={`thumb-${a.albumId}-${a.id}`} className=\"each-img\">\n\t\t\t\t\t\t<img src={a.thumbnailUrl} width=\"150\" height=\"150\"/>\n\t\t\t\t\t\t<p className=\"overme\">{a.title}</p>\n\t\t\t\t\t\t<p>{`Id: ${a.id}`}</p>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t\t{endIndex < albumDetail.length ? this.renderNext() : null}\n\t\t\t</Fragment>\n\t\t)\n\t}\n}\n\nexport default EachAlbum;\n","import React, { Component, Fragment } from 'react';\nimport { Row, Card, CardBody } from 'reactstrap'\nimport EachAlbum from './eachAlbum'\nimport './index.scss';\n\nclass App extends Component {\n\tcomponentDidMount() {\n\t\tconst { getAlbum } = this.props\n\t\tgetAlbum()\n\t}\n\n\trender() {\n\t\tconst { albums, albumDetails } = this.props\n\t\treturn (\n\t\t\t<div className=\"crousal\">\n\t\t\t\t{\n\t\t\t\t\talbums.map(album => (\n\t\t\t\t\t\t<Card key={`album-${album.get('id')}`} className=\"mb-3\">\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<h4 className=\"width-100-per pl-3\">{album.get('title')}</h4>\n\t\t\t\t\t\t\t\t\t<small className=\"pl-3\">\n\t\t\t\t\t\t\t\t\t\t{`Id: ${album.get('id')} | User ID: ${album.get('userId')}`}\n\t\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t<Row className=\"each-album mt-3\">\n\t\t\t\t\t\t\t\t\t<EachAlbum\n\t\t\t\t\t\t\t\t\t\talbum={album}\n\t\t\t\t\t\t\t\t\t\talbumDetail={albumDetails[album.get('id')] || []}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App;\n","import { connect } from 'react-redux';\nimport App from '../../components/App'\nimport { getAlbum } from './actions'\n\nconst mapStateToProps = state => ({\n\talbums: state.getIn(['AppReducer', 'albums']),\n\talbumDetails: state.getIn(['AppReducer', 'albumDetails']).toJS(),\n})\n\nconst mapDispatchToProps = dispatch => ({\n\tgetAlbum: () => dispatch(getAlbum())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React, { Component } from 'react';\nimport { Container } from 'reactstrap'\nimport './index.scss'\n\nclass LayoutContainer extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<Container fluid className=\"pt-4\">\n\t\t\t\t{React.Children.toArray(this.props.children)}\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default LayoutContainer;\n","import React, { Component } from 'react'\n\nclass NoMatch extends Component {\n\trender() {\n\t\treturn <h2>404 Page Not Found...</h2>\n\t}\n}\n\nexport default NoMatch\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport { Route, Switch } from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\nimport {\n\tconnectRouter,\n\tConnectedRouter,\n\trouterMiddleware as router\n} from 'connected-react-router/immutable'\nimport { applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\n\n// Import the index reducer and sagas\nimport IndexReducer from './utils/IndexReducer'\nimport IndexSagas from './utils/IndexSagas'\n\n// Import all of our components\nimport App from './containers/AppContainer'\nimport LayoutContainer from './containers/LayoutContainer'\nimport NoMatch from './components/NoMatch'\n\n// Import app names\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n// Other Imports\nimport * as registerServiceWorker from './serviceWorker';\n\n\n// Create browser history\nconst history = createBrowserHistory()\n\n// Build the middleware for intercepting and dispatching navigation actions\nconst routerMiddleware = router(history)\n\n// Build the middleware to watch between the Reducers and the Actions\nconst sagaMiddleware = createSagaMiddleware()\n\n/*eslint-disable */\nconst composeSetup =\n\tprocess.env.NODE_ENV !== 'production' &&\n\t\ttypeof window === 'object' &&\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n\t\t? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n\t\t: compose\n/* eslint-enable */\n// Setup Store\nconst store = createStore(\n\tconnectRouter(history)(IndexReducer),\n\tcomposeSetup(\n\t\tapplyMiddleware(\n\t\t\trouterMiddleware,\n\t\t\tsagaMiddleware,\n\t\t)\n\t) // allows redux devtools to watch sagas\n)\n\n// Begin our Index Saga\nsagaMiddleware.run(IndexSagas)\n\nReactDOM.render(\n\t<LayoutContainer>\n\t\t<Provider store={store}>\n\t\t\t<ConnectedRouter history={history}>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/\" component={App} />\n\t\t\t\t\t<Route component={NoMatch} />\n\t\t\t\t</Switch>\n\t\t\t</ConnectedRouter>\n\t\t</Provider>\n\t</LayoutContainer>,\n\tdocument.getElementById('root')\n)\nregisterServiceWorker.register()\n"],"sourceRoot":""}